

{% liquid
  if section.settings.desktop_media_position == 'left'
    assign render_order = 'media,product-details'
  else
    assign render_order = 'product-details,media'
  endif

  assign product_has_media = true
  if closest.product.media.size == 0
    assign product_has_media = false
  endif

  assign product_grid_class = 'product-information__grid'

  if product_has_media == false
    assign product_grid_class = product_grid_class | append: ' product-information--media-none'
  elsif section.settings.desktop_media_position == 'right'
    assign product_grid_class = product_grid_class | append: ' product-information--media-right'
  else
    assign product_grid_class = product_grid_class | append: ' product-information--media-left'
  endif

  if section.settings.equal_columns
    assign product_grid_class = product_grid_class | append: ' product-information__grid--half'

    if section.settings.limit_details_width
      assign product_grid_class = product_grid_class | append: ' product-information__grid--limit-details'
    endif
  endif

  case section.settings.content_width
    when 'content-center-aligned'
      assign content_width = 'page-width'
    when 'content-full-width'
      assign content_width = 'full-width'
  endcase
%}

<script type="application/ld+json">
  {{ closest.product | structured_data }}
</script>

<div class="section-background color-{{ section.settings.color_scheme }}"></div>
<div
  class="product-information section section--{{ content_width }} spacing-style color-{{ section.settings.color_scheme }} relative"
  style="{% render 'spacing-style', settings: section.settings %} --gap: {{ section.settings.gap }}px;"
>
  {% if section.settings.desktop_media_position == 'left' and product_has_media %}
    {% assign product_href = '#ProductInformation-' | append: section.id %}
    {% render 'skip-to-content-link', href: product_href, text: 'accessibility.skip_to_product_info' %}
  {% endif %}
  <div
    class="{{ product_grid_class }}"
    data-product-grid-content
  >
    {% assign render_order_array = render_order | split: ',' %}
    {% capture media %}
      <div
        class="product-information__media"
        data-testid="product-information-media"
      >
        {%- content_for 'block',
          type: '_product-media-gallery',
          id: 'media-gallery',
          closest.product: closest.product
        -%}
      </div>
    {% endcapture %}

    {% capture details %}
      {% content_for 'block',
        type: '_product-details',
        id: 'product-details',
        closest.product: closest.product
      %}
    {% endcapture %}

    {% for block in render_order_array %}
      {% if block == 'media' and product_has_media %}
        {{ media }}
      {% elsif block == 'product-details' %}
        {{ details }}
      {% endif %}
    {% endfor %}
  </div>

  {% content_for 'blocks' %}
{%- comment -%}
  === INVENTORY MANIFEST (FULL-WIDTH, preview 10 + descarga) ===
  Replica formato tipo Excel (colores, alineación) y formato numérico CLP.
{%- endcomment -%}
{%- assign manifest = closest.product.metafields.custom.manifest_xlsx | default: product.metafields.custom.manifest_xlsx -%}
{%- assign manifest_url = '' -%}
{%- if manifest.value and manifest.value.url -%}
  {%- assign manifest_url = manifest.value.url -%}
{%- endif -%}
{%- if manifest_url == '' and manifest != blank -%}
  {%- assign manifest_url = manifest | file_url -%}
{%- endif -%}
{%- if manifest_url == '' and manifest != blank -%}
  {%- assign manifest_url = manifest -%}
{%- endif -%}

<section id="ml-inventory-manifest"
         class="ml-manifest-section page-width"
         data-xlsx-url="{{ manifest_url | escape }}">
  <h3 class="ml-manifest-title">Detalle del lote</h3>
  <p class="ml-manifest-meta" aria-live="polite"></p>

  <div class="ml-manifest-tablewrap">
    {%- if manifest_url == '' -%}
      <p class="ml-manifest-empty">No hay ficha cargada para este producto.</p>
    {%- else -%}
      <p class="ml-manifest-loading">Cargando ficha…</p>
    {%- endif -%}
  </div>

  {%- if manifest_url != '' -%}
    <div class="ml-manifest-actions">
      <a class="ml-btn ml-btn-primary ml-download-btn" href="{{ manifest_url }}" target="_blank" rel="noopener">
        Descargar detalle completo
      </a>
    </div>
  {%- endif -%}
</section>

{%- if manifest_url != '' -%}
  <style>
    /* —— Contenedor con scroll horizontal suave (mobile-friendly) —— */
    .ml-manifest-tablewrap {
      overflow-x: auto;
      overflow-y: hidden;
      -webkit-overflow-scrolling: touch;
      border-radius: 8px;
      position: relative;
    }

    /* —— Estilo “tipo Excel” —— */
    .ml-manifest-table {
      width: 100%;
      min-width: 720px; /* asegura scroll horizontal en móvil */
      border-collapse: collapse;
      table-layout: auto;
      font-size: 14px;
      background: #fff;
      border: 1px solid #e5e7eb;
    }
    .ml-manifest-table th,
    .ml-manifest-table td {
      padding: 10px 12px;
      border: 1px solid #e5e7eb;
      vertical-align: middle;
      line-height: 1.3;
      word-break: normal;
      white-space: nowrap; /* evita cortar letras una bajo otra */
    }
    /* La primera columna (Descripción) sí puede partir línea */
    .ml-manifest-table th.col-desc,
    .ml-manifest-table td.col-desc {
      white-space: normal;
    }
    .ml-manifest-table th {
      background: #edf2ff;
      color: #111827;
      font-weight: 700;
      text-transform: none;
      position: sticky;
      top: 0;
      z-index: 1;
    }
    .ml-manifest-table tr:nth-child(even) td { background: #fafbff; } /* cebra */
    .ml-manifest-table .is-num { text-align: right; font-variant-numeric: tabular-nums; }
    .ml-manifest-table .is-text { text-align: left; }
    .ml-manifest-title { margin-bottom: 6px; }
    .ml-manifest-meta { margin: 0 0 14px; color: #6b7280; }
    .ml-manifest-loading, .ml-manifest-empty { color: #6b7280; }


    /* Botón centrado */
    .ml-manifest-actions {
      margin-top: 16px;
      text-align: center;
    }
    .ml-manifest-actions .ml-download-btn {
      display: inline-block;
    }
  </style>

  <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
  <script>
    (function(){
      var sec = document.getElementById('ml-inventory-manifest');
      if(!sec) return;
      var url = sec.getAttribute('data-xlsx-url');
      if(!url) return;

      var header = [], rows = [], shown = 0, total = 0;
      var MAX_PREVIEW = 10; // siempre mostrar sólo 10
      var metaEl = sec.querySelector('.ml-manifest-meta');
      var tableWrap = sec.querySelector('.ml-manifest-tablewrap');

      // Formateadores
      var nfInt = new Intl.NumberFormat('es-CL'); // para cantidades
      var nfCLP = new Intl.NumberFormat('es-CL', { style: 'currency', currency: 'CLP', maximumFractionDigits: 0 });

      // Heurística: columnas numéricas por nombre conocido o por datos
      function computeColKinds(hdr, body){
        var kinds = hdr.map(function(h){ return 'text'; }); // por defecto
        hdr.forEach(function(h, i){
          var name = (h || '').toString().trim().toLowerCase();
          if (/(cantidad|precio unidad|precio total|precio unitario|precio|total)/.test(name)) {
            kinds[i] = 'num';
            return;
          }
          // si >70% de las celdas parecen número, marcamos como num (evitamos SKU)
          var nums = 0, seen = 0;
          for (var r = 0; r < Math.min(body.length, 25); r++) {
            var v = body[r] && body[r][i];
            if (v === '' || v === null || typeof v === 'undefined') continue;
            seen++;
            if (typeof v === 'number') nums++;
            else if (typeof v === 'string') {
              var s = v.replace(/\./g,'').replace(/\s/g,'').replace(',', '.');
              if (/^-?\d+(\.\d+)?$/.test(s)) nums++;
            }
          }
          if (seen > 0 && nums / seen > 0.7) kinds[i] = 'num';
        });
        return kinds;
      }

      function updateMeta(){
        if (!total) { metaEl.textContent = ''; return; }
        var cap = Math.min(shown, total, MAX_PREVIEW);
        metaEl.textContent = 'Mostrando ' + cap + ' de ' + total + ' productos.';
      }

      function fmtValue(val, kind, colName){
        if (kind !== 'num') return (val ?? '').toString();
        var n = (typeof val === 'number') ? val : Number(String(val).replace(/\./g,'').replace(/\s/g,'').replace(',', '.'));
        if (!isFinite(n)) return (val ?? '').toString();
        var name = (colName || '').toString().toLowerCase();
        if (/precio|total|unit/.test(name)) return nfCLP.format(Math.round(n));
        return nfInt.format(Math.round(n));
      }

      function renderTable(colKinds){
        tableWrap.innerHTML = '';

        var table = document.createElement('table');
        table.className = 'ml-manifest-table';

        // Header
        var thead = document.createElement('thead');
        var trh = document.createElement('tr');
        header.forEach(function(h, i){
          var th = document.createElement('th');
          th.textContent = (h ?? '').toString();
          th.className = (colKinds[i] === 'num') ? 'is-num' : 'is-text';
          if (i === 0) th.classList.add('col-desc'); // primera columna (Descripción) puede quebrar línea
          trh.appendChild(th);
        });
        thead.appendChild(trh);
        table.appendChild(thead);

        // Body (preview)
        var tbody = document.createElement('tbody');
        rows.slice(0, shown).forEach(function(row){
          var tr = document.createElement('tr');
          header.forEach(function(h, i){
            var td = document.createElement('td');
            var kind = colKinds[i];
            td.className = (kind === 'num') ? 'is-num' : 'is-text';
            if (i === 0) td.classList.add('col-desc'); // idem en celdas
            td.textContent = fmtValue(row[i], kind, h);
            tr.appendChild(td);
          });
          tbody.appendChild(tr);
        });
        table.appendChild(tbody);

        tableWrap.appendChild(table);
        updateMeta();
      }

      fetch(url)
        .then(function(r){ return r.arrayBuffer(); })
        .then(function(buf){
          var wb = XLSX.read(buf, {type:'array'});
          var ws = wb.Sheets[wb.SheetNames[0]];
          var data = XLSX.utils.sheet_to_json(ws, {header:1, defval:'', raw:true});

          // Eliminar filas totalmente vacías
          data = data.filter(function(row){
            return row.some(function(c){ return String(c).trim() !== ''; });
          });

          if (!data.length){
            tableWrap.innerHTML = '<p class="ml-manifest-empty">La ficha no contiene datos.</p>';
            updateMeta();
            return;
          }

          header = data[0];
          rows   = data.slice(1);
          total  = rows.length;
          shown  = Math.min(MAX_PREVIEW, total);

          var colKinds = computeColKinds(header, rows);
          renderTable(colKinds);
        })
        .catch(function(err){
          console.error('Manifest XLSX error:', err);
          tableWrap.innerHTML = '<p class="ml-manifest-empty">No se pudo cargar la ficha.</p>';
          metaEl.textContent = '';
        });
    })();
  </script>
{%- endif -%}
</div>

{% stylesheet %}
  .product-information {
    gap: var(--gap) 0;
  }

  /* Base grid layout */
  .product-information__grid {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
  }

  /* Default column positions */
  .product-details {
    order: 1;
  }

  .product-information__media {
    order: 0;
    width: 0;
    min-width: 100%;
  }

  /* Mobile styles */
  @media screen and (max-width: 749px) {
    .product-information__media {
      grid-column: 1 / -1;
    }

    .product-details {
      grid-column: 2 / 3;
    }
  }

  /* Desktop styles */
  @media screen and (min-width: 750px) {
    .product-information__grid {
      grid-column: 2;
    }

    /* Position when there is no media */
    .product-information__grid.product-information--media-none,
    .product-information__grid:has(.product-information__media:empty) {
      .product-details {
        width: var(--narrow-content-width);
        margin: 0 auto;
      }
    }

    /* Position when there is media */
    .product-information__grid:not(:has(.product-information__media:empty)) {
      /* Media on the left side */
      &.product-information--media-left {
        grid-template-columns: 1fr min(50vw, var(--sidebar-width));

        .product-information__media {
          padding-right: calc(var(--gap, 0) / 2);
        }

        .product-details {
          padding-left: calc(var(--gap, 0) / 2);
        }

        &:has(.media-gallery--extend) {
          grid-column: 1 / 3;
        }
      }

      /* Media on the right side */
      &.product-information--media-right {
        grid-template-columns: min(50vw, var(--sidebar-width)) 1fr;

        .product-information__media {
          padding-left: calc(var(--gap, 0) / 2);
          order: 1;
        }

        .product-details {
          padding-right: calc(var(--gap, 0) / 2);
          order: 0;
        }

        &:has(.media-gallery--extend) {
          grid-column: 2 / -1;
        }
      }

      /* Equal width columns */
      &.product-information__grid--half,
      &.product-information__grid--half:has(.media-gallery--extend) {
        grid-column: 1 / -1;
        grid-template-columns:
          var(--full-page-grid-margin) calc(var(--full-page-grid-central-column-width) / 2) calc(
            var(--full-page-grid-central-column-width) / 2
          )
          var(--full-page-grid-margin);

        &.product-information--media-left {
          .product-information__media {
            grid-column: 2 / 3;

            &:has(.media-gallery--extend) {
              grid-column: 1 / 3;
            }
          }

          .product-details {
            grid-column: 3 / 4;
          }
        }

        &.product-information--media-right {
          .product-information__media {
            grid-column: 3 / 4;

            &:has(.media-gallery--extend) {
              grid-column: 3 / -1;
            }
          }

          .product-details {
            grid-column: 2 / 3;
          }
        }
      }
    }

    /* Handle full width section */
    .section--full-width {
      .product-information__grid:not(:has(.product-information__media:empty)),
      .product-information__grid:not(:has(.product-information__media:empty)) {
        &.product-information--media-left,
        &.product-information--media-right {
          grid-column: 1 / -1;
        }

        &.product-information--media-left .product-details {
          padding-inline-end: var(--padding-lg);
        }

        &.product-information--media-right .product-details {
          padding-inline-start: var(--padding-lg);
        }

        &.product-information__grid--half.product-information--media-left {
          .product-information__media {
            grid-column: 1 / 3;
          }

          .product-details {
            grid-column: 3 / -1;
          }
        }

        &.product-information__grid--half.product-information--media-right {
          .product-information__media {
            grid-column: 3 / -1;
          }

          .product-details {
            grid-column: 1 / 3;
          }
        }
      }
    }
  }

  /* Wider sidebar for large screens */
  @media screen and (min-width: 1200px) {
    .product-information__grid:not(
        .product-information__grid--half,
        :has(.product-information__media:empty)
      ).product-information--media-left {
      grid-template-columns: 2fr 1fr;
    }

    .product-information__grid:not(
        .product-information__grid--half,
        :has(.product-information__media:empty)
      ).product-information--media-right {
      grid-template-columns: 1fr 2fr;
    }
  }

  /* If the header is sticky, make product details content stick underneath the header */
  body:has(#header-group #header-component[data-sticky-state='active']) .product-details.sticky-content--desktop {
    --sticky-header-offset: var(--header-height);
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.product_information",
  "blocks": [
    {
      "type": "@app"
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:content.layout"
    },
    {
      "type": "select",
      "id": "content_width",
      "label": "t:settings.width",
      "options": [
        {
          "value": "content-center-aligned",
          "label": "t:options.page"
        },
        {
          "value": "content-full-width",
          "label": "t:options.full"
        }
      ],
      "default": "content-center-aligned"
    },
    {
      "type": "select",
      "id": "desktop_media_position",
      "label": "t:settings.media_position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "right",
          "label": "t:options.right"
        }
      ],
      "default": "left"
    },
    {
      "type": "checkbox",
      "id": "equal_columns",
      "label": "t:settings.equal_columns",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "limit_details_width",
      "label": "t:settings.limit_product_details_width",
      "default": false,
      "visible_if": "{{ section.settings.equal_columns }}"
    },
    {
      "type": "range",
      "id": "gap",
      "label": "t:settings.gap",
      "min": 0,
      "max": 48,
      "step": 4,
      "unit": "px",
      "default": 16
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:content.padding"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 0
    }
  ],
  "presets": []
}
{% endschema %}
